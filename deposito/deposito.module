<?php

/*
 *	Implemento hook_menu
 */

function deposito_menu(){
	$items = array ();

	$items ['deposito'] = array(
	'title' => 'Deposito',
	'description' => 'descrizione form',
	'page callback' => 'drupal_get_form',
	'page arguments' => array('deposito_form'),
	'access callback' => TRUE
	);
	
	return $items;
}

/*
 *	Inizializzo il form per il deposito dei libri
 */

function deposito_form($form, &$form_state){
	$select_stazione = _deposito_get_stazione_by_vid(3);

	$valore_stazione = isset($form_state['values']['stazione']) ? $form_state['values']['stazione'] : '';
	
	$form['stazione'] = array(
	'#type' => 'select',
	'#title' => 'Stazione',
	'#required' => TRUE,
	'#options' => $select_stazione,
	'#default_value' => $valore_stazione,
	); // chiusura array form['stazione']

	$form['libro'] = array(
	'#type' => 'select',
	'#title' => 'Libro da depositare',
	'#required' => TRUE,
	'#options' => _deposito_get_libro_by_vid(2),
	'#default_value' => '',
	); // chiusura array form['libro']

	$form['submit'] = array(
	'#type' => 'submit',
	'#value' => t('Deposita il libro selezionato'),
	);
	
	return $form;

}

function deposito_permission(){
        return array(
                'title' => t('Access content for the ritiro form'),           
                );
}

function deposito_form_validate($form, &$form_state){
}

function _deposito_get_stazione_by_vid($vid){
	$terms = taxonomy_get_tree($vid);
	$output[0] = '';
	foreach ($terms as $data){
	$output[$data->tid] = $data->name;
	}// foreach
	return $output;
}

function _deposito_get_libro_by_vid($vid){
	$terms = taxonomy_get_tree($vid);
	$output[0] = '';
	foreach($terms as $data){
		$output[$data->tid] = $data->name;
	}//foreach
	return $output;
}

function deposito_form_submit($form, &$form_state){
	$stazione_selezionata = $form_state['values']['stazione'];
	$libro_selezionato = $form_state['values']['libro'];
//	drupal_set_message($stazione_selezionata);
//	drupal_set_message($libro_selezionato);
	$query = new EntityFieldQuery;
	$query->entityCondition('entity_type', 'node')
	->entityCondition('bundle','libro')
	->fieldCondition('field_stazione', 'tid', $stazione_selezionata, 'CONTAINS')
	->fieldCondition('field_titolo', 'tid', $libro_selezionato, 'CONTAINS');
	$results = $query -> execute();


	$nids = array_keys($results['node']);
	$nodes = node_load_multiple($nids);
/* inserisco un if per differenziare le azioni eseguete. Field_attach_update se il libro è già presente in stazione anche se con numero = 0.
 *	Field_attach_insert se erro non è mai stato in quella stazione
 */
//	print(count($results['node']));
	foreach($nodes as $node){
		$numerofield = field_get_items('node', $node, 'field_numero');
	//aumento di 1 il numero
		$numero = $numerofield[0]['value'] + 1;
		$node->field_numero[LANGUAGE_NONE][0]['value'] = $numero;
		field_attach_update('node', $node);
	}//foreach

	$form_state['rebuild'] = TRUE;
}
