<?php

/**
 *
 * Implemento  hook_menu
 */

function ritiro_menu(){
	$items = array();

	$items ['ritiro'] = array(
	'title' => 'Ritiro',
	'description' => 'descrizione form',
	'page callback' => 'drupal_get_form',
	'page arguments' => array('ritiro_form'),
	'access callback' => TRUE
	);
	
	return $items;	
}
// inizializzo il form
function ritiro_form($form, &$form_state){
	$select_stazione = _ritiro_get_vocabulary(3);

	$valore_stazione = isset($form_state['values']['stazione']) ? $form_state['values']['stazione'] : '';

	$form['stazione'] = array(
	'#type' => 'select',
	'#title' => 'Stazione',
	'#required' => TRUE,
	'#options' => $select_stazione,
	'#default_value' => $valore_stazione,
	// inserisco ajax necessario per la funzione che voglio svolgere
/*	'#ajax' => array(
		// quando si verifica 'event' drupal fa una richiesta ad ajax in background. 
		'event' => 'change',
		'callback' => 'ritiro_ajax_callback',
		'wrapper' => 'libro_replace',
		), //chiudo ajax
*/
	); //chiudo array form stazione
        $form['submint_stazione'] = array(
        '#type' => 'submit',
        '#value' => t('Scegli stazione!'),
        );


	$form['libro'] = array(
	'#type' => 'select',
	'#title' => 'Libro',
	'#prefix' => '<div id="libro_replace">',
	'#suffix' => '<div>',
	'#options' => seconda_select_list($valore_stazione), //devo implementare tipo il get vocabulary di sopra
//	'#default_value' => isset($form_state['values']['libro']) ? $form_state['values']['libro'] : '',
	'#default_value' => '',
	); // array form libro

	$form['submit_libro'] = array(
	'#type' => 'submit',
	'#value' => t('Ritira libro selezionato!'),
	'#submit' => array('_ritiro_libro'),
	//'#validate' => 
	);
	
	return $form;
} // function ritiro_form
/*
function ritiro_ajax_callback($form, &$form_state){
	return $form['libro'];
}*/

function _ritiro_get_vocabulary($vid){
	$terms = taxonomy_get_tree($vid);
	$output[0] = '';
	foreach ($terms as $data){
	$output[$data->tid] = $data->name;
	}
	return $output;	
}

function seconda_select_list($cond){
//	$term_stazione = taxonomy_get_term_by_name($valore_stazione);
//	$tid_stazione = _taxonomy_get_id_from_term($term_stazione);
//	$vid = $terms->vid;
//	 provo ad inserire una query
//	$term = taxonomy_get_term_by_name(
	$query = new EntityFieldQuery;
	$query-> entityCondition('entity_type', 'node')
	-> entityCondition('bundle', 'libro')
	-> fieldCondition('field_stazione', 'tid', $cond, 'CONTAINS')
	-> fieldCondition('field_numero', 'value', 0 , '>');
	$results = $query-> execute();

	if (isset ($results['node'])){
	$nids = array_keys($results['node']);
	$nodes = node_load_multiple($nids);
	}
	$output_libro[0] = '';
	foreach ($nodes as $node){
	//$output_libro[$data-> tid] = $data -> name;
		  $titolofield = field_get_items('node',$node, 'field_titolo');
		  $titolotid = $titolofield[0]['tid'];
		  $titoloterm = taxonomy_term_load($titolotid);
		  $titolo = $titoloterm->name;
		  $output_libro[$titolotid] = $titolo;
	}//foreach

	return $output_libro;
	
}
function ritiro_form_validate($form, &$form_state){
}

function ritiro_form_submit($form, &$form_state){
        drupal_set_message(t('Stazione immessa'));
        $form_state['rebuild'] = TRUE;
}

function _ritiro_libro($form, &$form_state){
//	drupal_set_message($form_state['values']['libro']); // qui mi riporta il tid del libro scelto
//	drupal_set_message($form_state['values']['stazione']);
	$libro_selezionato = $form_state['values']['libro'];
//	drupal_set_message($libro_selezionato);
	$libro_selezionato_term = taxonomy_term_load($libro_selezionato);
	$titolo = $libro_selezionato_term->name;
//	drupal_set_message($titolo);
	$stazione_selezionata = $form_state['values']['stazione'];
	$stazione_selezionata_term = taxonomy_term_load($stazione_selezionata);
	$stazione = $stazione_selezionata_term->name;
//	drupal_set_message($stazione);
	
	$query = new EntityFieldQuery;
	$query->entityCondition('entity_type', 'node')
	->entityCondition('bundle','libro')
	->fieldCondition('field_stazione', 'tid', $stazione_selezionata, 'CONTAINS')
	->fieldCondition('field_titolo', 'tid', $libro_selezionato, 'CONTAINS');
	$results = $query->execute();

	$nids = array_keys($results['node']);
	$nodes = node_load_multiple($nids);
//	$nodesoutput = node_view_multiple($nodes);
//	print(count($results['node']));
	foreach ($nodes as $node){
	$numerofield = field_get_items('node', $node, 'field_numero');
	$numero = $numerofield[0]['value'] -1;
//	$numerofield[0]['value'] = $numero;
//	$node->field_data_field_numero['node'][0]['value'] = $numero;
//	field_attach_update('node', $numerofield[0]['value']);
/*
	$wrapper = entity_metadata_wrapper('value', $numero);
	$wrapper->field_data_field_numero->set ($numero - 1);
	$wrapper ->save();
*/
	}	
	drupal_set_message($numero);
//	_update_numero();
	
	$form_state['rebuild'] = TRUE;
}

function ritiro_permission(){
        return array(
                'title' => t('Access content for the ritiro form'),           
                );
}
/*
function _update_numero(){  
 $query = db_select('field_data_field_numero');
	 $query->Fields( array('value'));
	$result = $query->execute();

  // Loop through each row item in the results
  foreach ($result as $record) {
	$valore_numero = field_info_field($record);
	drupal_set_message($valore_numero);
*/
